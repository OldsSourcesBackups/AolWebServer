#
# The contents of this file are subject to the AOLserver Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://aolserver.com/.
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
# the License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is AOLserver Code and related documentation
# distributed by AOL.
# 
# The Initial Developer of the Original Code is America Online,
# Inc. Portions created by AOL are Copyright (C) 1999 America Online,
# Inc. All Rights Reserved.
#
# Alternatively, the contents of this file may be used under the terms
# of the GNU General Public License (the "GPL"), in which case the
# provisions of GPL are applicable instead of those above.  If you wish
# to allow use of your version of this file only under the terms of the
# GPL and not to allow others to use your version of this file under the
# License, indicate your decision by deleting the provisions above and
# replace them with the notice and other provisions required by the GPL.
# If you do not delete the provisions above, a recipient may use your
# version of this file under either the License or the GPL.
# 
#
# $Header$
#

#
# Makefile.global --
#
#      This is the common Makefile that contains all variables and
#      utilities used by AOLserver source code and modules.
#


#
# The following conditional variable updates are for the benefit
# of typing make in a module subdirectory during development
#

ifndef NSHOME
    NSHOME=$(shell pwd)/..
endif
ifndef AOLSERVER
    AOLSERVER=$(NSHOME)/root
endif
ifndef NSDEBUG
    NSDEBUG=1
endif
ifndef NSGCC
    NSGCC=1
endif

#
# You should not need to edit anything below.
#

INST         =	 $(AOLSERVER)
INSTBIN      =   $(INST)/bin
INSTLIB      =   $(INST)/lib
INSTINC      =   $(INST)/include
INSTLOG      =   $(INST)/log
INSTMOD      =   $(INST)/modules
INSTTCL      =   $(INSTMOD)/tcl
INSTSRV      =   $(INST)/servers/server1
INSTSRVMOD   =   $(INSTSRV)/modules
INSTSRVPAG   =   $(INSTSRV)/pages

#
# Common build variables.
#

ifeq (1,$(NSDEBUG))
    CCOPT     	= -g
else
    CCOPT    	= -O2
    CFLAGS   	+= -DNDEBUG=1
endif

ifeq (1,$(NSGCC))
    CC       	=  gcc 
    LDSO     	=  gcc -shared -nostartfiles
    CFLAGS	+= -fPIC
else
    CC	     =   $(PURIFY) cc
endif

CFLAGS       +=  -I$(NSHOME)/include -D_REENTRANT=1 -DTCL_THREADS=1
MKDIR        =   /bin/mkdir -p
RM           =   /bin/rm -f
CP           =   /bin/cp -fp
ECHO         =   /bin/echo
FIND         =   find

#
# Tcl version config.
#

NSTCL_MAJOR  	= 8
NSTCL_MINOR  	= 3
NSTCL_PATCH  	= .3
NSTCL_VERSION	= $(NSTCL_MAJOR).$(NSTCL_MINOR)
NSTCL_ROOT	= $(NSHOME)/tcl$(NSTCL_VERSION)$(NSTCL_PATCH)
ifeq (1,$(NSGCC))
    NSTCL_CFG  	+= --enable-gcc
endif
ifeq (1,$(NSDEBUG))
    NSTCL_DBG  	=  g
    NSTCL_CFG  	+= --enable-symbols
endif

#
# Directory config.
#

NSTCL_DIR	= $(NSTCL_ROOT)/unix
NSTHREAD_DIR	= $(NSHOME)/thread
NSD_DIR		= $(NSHOME)/nsd

#
# Library config.
#

LIBS	     	= -lm
SOEXT		= so
RFLAG		= -rpath
RPATH		= -Wl,$(RFLAG),$(INSTLIB) 

NSTCL_CFG	+= --prefix=$(AOLSERVER)
NSTCL		= tcl$(NSTCL_VERSION)$(NSTCL_DBG)
NSTCL_FILE	= lib$(NSTCL).$(SOEXT)
NSTCL_LIB	= -L$(NSTCL_DIR) -l$(NSTCL)

NSTHREAD	= nsthread
NSTHREAD_FILE	= lib$(NSTHREAD).$(SOEXT)
NSTHREAD_LIB	= -L$(NSTHREAD_DIR) -l$(NSTHREAD)

NSD	 	= nsd
NSD_FILE	= lib$(NSD).$(SOEXT)
NSD_LIB		= -L$(NSD_DIR) -l$(NSD)

#
# Figure the OS and architecture.
#

PLATFORM = unknown
PLAT     = $(shell uname -a)

#
# HP/UX
#

ifneq (,$(findstring HP-UX,$(PLAT)))
    PLATFORM=hp10
    ifeq (1,$(NSGCC))
        CFLAGS+=-mpa-risc-1-0
    else
        CFLAGS+=-Ae +DAportable +z
    endif
    RFLAG=+b
    SOEXT=sl
    LDSO=ld -b
    LIBS+=-ldce -lc_r
    CFLAGS+=-D__hp10=1 -DHAVE_PTHREAD_D4=1 -DUSE_DLSHL=1 -DNEED_HERRNO=1
endif


#
# Linux
#

ifneq (,$(findstring Linux,$(PLAT)))
    PLATFORM=linux
    ## We optimize for either i686 or i586 -- they really are very different.
    ifneq (,$(findstring "i686",$(PLAT)))
        CFLAGS+=-mcpu=i686
    endif
    ifneq (,$(findstring "i586",$(PLAT)))
        CFLAGS+=-mcpu=i586
    endif
    LIBS+=-ldl -lpthread 
    CFLAGS+=-DHAVE_CMMSG=1 -DUSE_FIONREAD=1 -DHAVE_COND_EINTR=1
endif


#
# Solaris
#
#    Note: Purify works only on Solaris 7 SPARC with SUNWspro or gcc-2.8.1.
#

ifneq (,$(findstring SunOS,$(PLAT)))
    PLATFORM=solaris
    ifeq (1,$(NSGCC))
        ifneq (,$(findstring sparc,$(PLAT)))
            CFLAGS+=-mcpu=ultrasparc
        else
            CFLAGS+=-mcpu=pentium
        endif
    else
        CC=$(PURIFY) /opt/SUNWspro/bin/cc
	ifneq (1,$(NSDEBUG))
            CCOPT = -xO2
	endif
        CFLAGS+=-KPIC -erroff=%none
        ifneq (,$(findstring sparc,$(PLAT)))
            CFLAGS+=-xarch=v8plusa
        else
            CFLAGS+=-xpentium
        endif
    endif
    LDSO=/usr/ccs/bin/ld -G
    RFLAG = -R
    RPATH += -Wl,$(RFLAG),/usr/lib/lwp
    LIBS+=-lsocket -lnsl -ldl -lposix4 -lthread -lresolv
    CFLAGS+=-D_POSIX_PTHREAD_SEMANTICS=1 -DUSE_PTHREAD_SYSSCOPE=1 \
            -DUSE_PTHREAD_PSHARED=1 -DHAVE_ETIME_BUG=1 \
            -DUSE_DUPHIGH=1 -DHAVE_FORK1=1
endif

#
# DEC OSF/1, Digital UNIX, Tru64 UNIX
#

ifneq (,$(findstring OSF1,$(PLAT)))
    PLATFORM=osf
    # gcc not verified
    CC=cc
    CFLAGS+=-std1 -pthread -DNO__ENVIRON=1
    LDSO=ld -shared -expect_unresolved '*'
    LIBS+=-lrt
endif


#
# SGI Irix
#

ifneq (,$(findstring IRIX,$(PLAT)))
    PLATFORM=irix
    ## Purify seems to work on Irix o32 only.
    ifeq (1,$(NSGCC))
        ABI=-n32
    else
        ABI=-o32
        ##CCOPT = -g3 -O2
        CFLAGS  += $(ABI) -KPIC -fullwarn -DUSE_DUPHIGH=1
    endif
    LDSO=ld $(ABI) -shared -rdata_shared
    CFLAGS+=-D_SGI_MP_SOURCE=1 -DNO_LONGDBL=1
    ifeq ($(USE_SPROC), 0)
    	LIBS += -lpthread
    else
    	CFLAGS+=-DUSE_SPROC=1
    endif

endif

#
# FreeBSD
#

ifneq (,$(findstring FreeBSD,$(PLAT)))
    PLATFORM=freebsd
    CC += -pthread
    ## FreeBSD doesn't make a distinction among processors in the x86 class.
    ifneq (,$(findstring i386,$(PLAT)))
        CFLAGS+=-mcpu=pentium
    endif
    LDSO=ld -Bshareable -x
    CFLAGS+=-D_THREAD_SAFE=1 -DHAVE_CMMSG=1 -DNO_TIMEZONE=1 \
	   -DHAVE_TIMEGM=1 -DNO__ENVIRON=1
endif


#
# OpenBSD
#

ifneq (,$(findstring OpenBSD,$(PLAT)))
    PLATFORM=openbsd
    CFLAGS+=-pthread
    ## OpenBSD doesn't make a distinction among processors in the x86 class.
    ifneq (,$(findstring i386,$(PLAT)))
        CFLAGS+=-mcpu=pentium
    endif
    CFLAGS+=-DHAVE_CMMSG=1 -DUSE_DLSYMPREFIX=1 -DUSE_RTLD_LAZY=1 \
           -DNO_TIMEZONE=1 -DHAVE_TIMEGM=1 -D_THREAD_SAFE=1 \
	   -DNO__ENVIRON=1
endif


#
# SCO Unixware
#

ifneq (,$(findstring UnixWare,$(PLAT)))
    PLATFORM=unixware
    CC=cc
    CFLAGS+=-Kpic -Kthread -D__unixware
    LDSO=ld -G
    LIBS+=-Kthread -lsocket
    CLFAGS+=-DUSE_PTHREAD_SYSSCOPE=1 -DHAVE_SENDV=1 -DHAVE_CMMSG=1
endif


#
# Mac OS X
#

ifneq (,$(findstring Rhapsody,$(PLAT)))
    PLATFORM=osx
endif
ifneq (,$(findstring Darwin,$(PLAT)))
    PLATFORM=osx
endif
ifeq (osx,$(PLATFORM))
    CC=cc
    CFLAGS+=-dynamic -traditional-cpp
    LDSO=cc -bundle -undefined suppress
    CFLAGS+=-DHAVE_CMMSG=1 -DUSE_DYLD=1 -DUSE_DLSYMPREFIX=1 \
            -DNO_RAND48=1 -DNO_TIMEZONE=1 -DMACOSX=1
endif

ifeq (unknown,$(PLATFORM))
    error unknown platform
endif

#
# Add the debug/optimize flags.
#

CFLAGS += $(CCOPT)
