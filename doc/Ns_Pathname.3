
'\"
'\" The contents of this file are subject to the AOLserver Public License
'\" Version 1.1 (the "License"); you may not use this file except in
'\" compliance with the License. You may obtain a copy of the License at
'\" http://aolserver.com/.
'\"
'\" Software distributed under the License is distributed on an "AS IS"
'\" basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
'\" the License for the specific language governing rights and limitations
'\" under the License.
'\"
'\" The Original Code is AOLserver Code and related documentation
'\" distributed by AOL.
'\" 
'\" The Initial Developer of the Original Code is America Online,
'\" Inc. Portions created by AOL are Copyright (C) 1999 America Online,
'\" Inc. All Rights Reserved.
'\"
'\" Alternatively, the contents of this file may be used under the terms
'\" of the GNU General Public License (the "GPL"), in which case the
'\" provisions of GPL are applicable instead of those above.  If you wish
'\" to allow use of your version of this file only under the terms of the
'\" GPL and not to allow others to use your version of this file under the
'\" License, indicate your decision by deleting the provisions above and
'\" replace them with the notice and other provisions required by the GPL.
'\" If you do not delete the provisions above, a recipient may use your
'\" version of this file under either the License or the GPL.
'\" 
'\"
'\" $Header$
'\"
'\" 
.so man.macros

.TH Ns_Pathname 3 4.0 AOLserver "AOLserver Library Procedures"
.BS
'\" Note:  do not modify the .SH NAME line immediately below!
.SH NAME
Ns_MakePath, Ns_NormalizePath, Ns_PathIsAbsolute \- Pathname procedures
.SH SYNOPSIS
.nf
\fB#include "ns.h"\fR
.sp
char *
\fBNs_MakePath\fR(\fINs_DString *dest, ...\fR)
.sp
char *
\fBNs_NormalizePath\fR(\fINs_DString *dsPtr, char *path\fR)
.sp
int
\fBNs_PathIsAbsolute\fR(\fIchar *path\fR)
.BE

.SH DESCRIPTION
.PP
These functions operate on file pathnames. They work with Unix and
Windows pathnames on their respective hosts.
.TP
\fBNs_MakePath\fR(\fIdest, ...\fR)

Construct a path name from a list of path elements. The Ns_MakePath
function constructs a path name by appending a list of path elements
to the given Ns_DString. The path elements are separated by single
slashes, and the resulting path name is appended to the given
Ns_DString. The last argument needs to be NULL to indicate the end of
the argument list.
.TP
\fBNs_NormalizePath\fR(\fIdsPtr, path\fR)

Normalize a path name. This function removes any extraneous slashes
from the path and resolves "." and ".."  references. The result is
appended to the given Ns_DString. The following code appends "/dog" to
the Ns_DString:

.CS
Ns_NormalizePath(&ds,
    "/dog/cat/../../rat/../../dog//mouse/..");
.CE
.TP
\fBNs_PathIsAbsolute\fR(\fIpath\fR)

Check for an absolute path name. Return NS_TRUE if the path is
absolute and NS_FALSE otherwise. Under Unix, an absolute path starts
with a "/". On Windows, it starts with a drive letter followed
immediately by a ":".

.SH "SEE ALSO"
nsd(1), info(n)

.SH KEYWORDS

