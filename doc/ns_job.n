
'\"
'\" The contents of this file are subject to the AOLserver Public License
'\" Version 1.1 (the "License"); you may not use this file except in
'\" compliance with the License. You may obtain a copy of the License at
'\" http://aolserver.com/.
'\"
'\" Software distributed under the License is distributed on an "AS IS"
'\" basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
'\" the License for the specific language governing rights and limitations
'\" under the License.
'\"
'\" The Original Code is AOLserver Code and related documentation
'\" distributed by AOL.
'\" 
'\" The Initial Developer of the Original Code is America Online,
'\" Inc. Portions created by AOL are Copyright (C) 1999 America Online,
'\" Inc. All Rights Reserved.
'\"
'\" Alternatively, the contents of this file may be used under the terms
'\" of the GNU General Public License (the "GPL"), in which case the
'\" provisions of GPL are applicable instead of those above.  If you wish
'\" to allow use of your version of this file only under the terms of the
'\" GPL and not to allow others to use your version of this file under the
'\" License, indicate your decision by deleting the provisions above and
'\" replace them with the notice and other provisions required by the GPL.
'\" If you do not delete the provisions above, a recipient may use your
'\" version of this file under either the License or the GPL.
'\" 
'\"
'\" $Header$
'\"
'\" 
.so man.macros

.TH ns_job n 4.0 AOLserver "AOLserver Built-In Commands"
.BS
'\" Note:  do not modify the .SH NAME line immediately below!
.SH NAME
ns_job \- commands
.SH SYNOPSIS
\fBns_job\fR option ?\fIarg arg ...\fR?

\fBns_job\fR create \fIqueue_name ?maxthreads? \fR

\fBns_job\fR queue \fIqueue_name script \fR

\fBns_job\fR wait \fIqueue_name job_id \fR

\fBns_job\fR cancel \fIqueue_name job_id \fR

\fBns_job\fR jobs \fIqueue_name \fR

\fBns_job\fR job_list \fIqueue_name \fR

\fBns_job\fR queues

\fBns_job\fR queue_list 

.BE

.SH DESCRIPTION
.PP
ns_job manages sets of thread pools called "queues". Queues have a max number of threads and when the current number of running thread reaches "max" then jobs are queued.


.SH OPTIONS
.PP

\fBcreate \fR
.RS

create \fIqueue_name ?maxthreads? \fR

Create a new thread pool queue called \fIqueue_name\fR. If \fImaxthreads\fR is not specified, then the default of 4 is used.

.RE
\fBqueue\fR
.RS

queue \fIqueue_name script \fR

Add a new job to the queue. If there are less than \fImaxthreads\fR current running then the job will be started. If there are \fImaxthreads\fR currently running then this new job will be queued.

The new job's ID is returned.

.RE
\fBwait\fR
.RS

wait \fIqueue_name job_id \fR

Wait for the specified queued or running job to finish. \fIwait\fR returns the results of the script.

.RE
\fBcancel\fR
.RS

cancel \fR\fIqueue_name job_id \fR

Remove the specified job from the queue. If the job is currently running, then the job will be removed from the queue when it completes.

\fI1 (true) \fR is returned if the job is currently running and can not be cancelled.

.RE
\fBjobs \fR
.RS

jobs \fIqueue_name \fR

This API returns a list of job "results" in an arbitrary order. Use \fBjob_list\fR instead.

.RE
\fBqueues \fR
.RS

Returns a list of the current queues.

.RE
\fBjob_list \fR
.RS

Return a list of all the jobs in the queue. The "job" consists of:

ID
.RS
Job's ID
.RE

STATE
.RS
JOB_SCHEDULED
.RS
The job is schedule to run.
.RE
JOB_RUNNING
.RS
The job is currently running.
.RE
JOB_DONE
.RS
The job is has completed.
.RE
.RE


RESULTS
.RS
If the job has completed, then this field will contain the results. If the job is running or scheduled to run, then this will contain the script.
.RE

CODE
.RS
When the job is done, this will contain the return code.
.RS
Codes
.RS
 TCL_OK
 TCL_ERROR
 TCL_RETURN
 TCL_BREAK
 TCL_CONTINUE
.RE

TYPE
.RS
 JOB_NON_DETACHED
 JOB_DETACHED
.RE

REQ
.RS
 JOB_NONE
 JOB_WAIT
 JOB_CANCEL
.RE

.RE

.SH BUGS

There is currently no way to destroy a created queue.

The ns_job jobs API needs changes in order to make it useful.


.SH "SEE ALSO"
nsd(1), info(n)

.SH KEYWORDS

ns_job
